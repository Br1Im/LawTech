# Stage 1: Сборка frontend
FROM node:18-alpine AS frontend-build
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci
COPY frontend/ ./
RUN npm run build

# Stage 2: Сборка backend
FROM node:18-alpine AS backend-build
WORKDIR /app/server
COPY server/package*.json ./
RUN npm ci
COPY server/ ./

# Stage 3: Финальный образ только с frontend и backend
FROM node:18-alpine AS production

# Установка nginx
RUN apk add --no-cache nginx

# Создание директорий
WORKDIR /app
RUN mkdir -p /var/log/nginx /var/lib/nginx/tmp /etc/nginx/conf.d

# Копирование собранного frontend
COPY --from=frontend-build /app/frontend/dist /usr/share/nginx/html

# Копирование backend
COPY --from=backend-build /app/server /app/server

# Конфигурация nginx
RUN echo 'server {\n\
    listen 80;\n\
    server_name localhost;\n\
    \n\
    # Frontend статика\n\
    location / {\n\
        root /usr/share/nginx/html;\n\
        try_files $uri $uri/ /index.html;\n\
    }\n\
    \n\
    # API проксирование\n\
    location /api/ {\n\
        proxy_pass http://localhost:5000;\n\
        proxy_http_version 1.1;\n\
        proxy_set_header Upgrade $http_upgrade;\n\
        proxy_set_header Connection "upgrade";\n\
        proxy_set_header Host $host;\n\
        proxy_set_header X-Real-IP $remote_addr;\n\
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\
        proxy_set_header X-Forwarded-Proto $scheme;\n\
        proxy_cache_bypass $http_upgrade;\n\
    }\n\
}' > /etc/nginx/conf.d/default.conf

# Создание start.sh без Python сервиса
RUN echo '#!/bin/sh\n\
echo "Starting LawTech application (Frontend + Backend only)..."\n\
echo "Current directory: $(pwd)"\n\
echo "Available files: $(ls -la)"\n\
\n\
# Проверка наличия server.js\n\
if [ ! -f "/app/server/server.js" ]; then\n\
    echo "ERROR: server.js not found!"\n\
    exit 1\n\
fi\n\
\n\
# Запуск Node.js сервера в фоне\n\
echo "Starting Node.js server..."\n\
cd /app/server && node server.js &\n\
NODE_PID=$!\n\
echo "Node.js server started with PID: $NODE_PID"\n\
\n\
# Запуск nginx\n\
echo "Starting nginx..."\n\
nginx -g "daemon off;" &\n\
NGINX_PID=$!\n\
echo "Nginx started with PID: $NGINX_PID"\n\
\n\
# Ожидание завершения процессов\n\
wait $NODE_PID $NGINX_PID' > /app/start.sh

# Делаем скрипт исполняемым
RUN chmod +x /app/start.sh

# Проверка создания скрипта
RUN ls -la /app/start.sh && head -5 /app/start.sh

# Установка переменных окружения
ENV NODE_ENV=production
ENV PORT=5000

# Открытие портов
EXPOSE 80 5000

# Запуск приложения
ENTRYPOINT ["/bin/sh", "/app/start.sh"]