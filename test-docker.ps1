# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
Write-Host "=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Docker —Å–±–æ—Ä–∫–∏ LawTech ===" -ForegroundColor Cyan

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." -ForegroundColor Yellow
docker stop lawtech-app 2>$null
docker rm lawtech-app 2>$null

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑–∞
Write-Host "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑–∞..." -ForegroundColor Yellow
docker rmi lawtech:latest 2>$null

# –°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞
Write-Host "–°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞..." -ForegroundColor Yellow
docker build -t lawtech:latest .

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞!" -ForegroundColor Green
    
    # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    Write-Host "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..." -ForegroundColor Yellow
    docker run -d --name lawtech-app -p 10000:10000 lawtech:latest
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        Write-Host "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:10000" -ForegroundColor Cyan
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
        Write-Host "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
        Start-Sleep -Seconds 10
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
        Write-Host "=== –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ===" -ForegroundColor Cyan
        docker logs lawtech-app
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        Write-Host "Checking application availability..."
        Start-Sleep -Seconds 5

        try {
            $response = Invoke-WebRequest -Uri "http://localhost:10000" -UseBasicParsing
            Write-Host "Frontend is running! Status: $($response.StatusCode)"
            Write-Host "Response length: $($response.Content.Length) characters"
            if ($response.Content -like "*<!DOCTYPE html>*") {
                Write-Host "‚úì Frontend HTML detected"
            } else {
                Write-Host "‚ö† Unexpected response format"
            }
        } catch {
            Write-Host "Frontend check failed: $($_.Exception.Message)"
        }

        try {
            $apiResponse = Invoke-WebRequest -Uri "http://localhost:10000/api/health" -UseBasicParsing
            Write-Host "API Health check: $($apiResponse.StatusCode)"
            Write-Host "API Response: $($apiResponse.Content)"
        } catch {
            Write-Host "API health check failed: $($_.Exception.Message)"
        }

        try {
            $statusResponse = Invoke-WebRequest -Uri "http://localhost:10000/api/status" -UseBasicParsing
            Write-Host "API Status check: $($statusResponse.StatusCode)"
            Write-Host "Status Response: $($statusResponse.Content)"
        } catch {
            Write-Host "API status check failed: $($_.Exception.Message)"
        }
        
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞" -ForegroundColor Red
    exit 1
}

Write-Host "`n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===" -ForegroundColor Cyan
Write-Host "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: docker stop lawtech-app" -ForegroundColor Gray
Write-Host "–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: docker rm lawtech-app" -ForegroundColor Gray