const db = require('../db');
const bcrypt = require('bcrypt');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ—Ç–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
 */
const seedUsers = async () => {
  try {
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤...');
    
    // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ—Ñ–∏—Å—ã
    const offices = [
      {
        name: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è —Ñ–∏—Ä–º–∞ "–ü—Ä–∞–≤–æ–≤–µ–¥"',
        address: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 15',
        contact_phone: '+7 (495) 123-45-67',
        website: 'https://pravoved.ru',
        revenue: 5000000.00,
        orders: 150
      },
      {
        name: '–ê–¥–≤–æ–∫–∞—Ç—Å–∫–æ–µ –±—é—Ä–æ "–ó–∞—â–∏—Ç–∞"',
        address: '–≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ù–µ–≤—Å–∫–∏–π –ø—Ä., –¥. 28',
        contact_phone: '+7 (812) 987-65-43',
        website: 'https://zashchita.spb.ru',
        revenue: 3200000.00,
        orders: 89
      },
      {
        name: '–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥–æ–≤–∞—è –≥—Ä—É–ø–ø–∞ "–õ–µ–∫—Å"',
        address: '–≥. –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 42',
        contact_phone: '+7 (343) 555-12-34',
        website: 'https://lex-consult.ru',
        revenue: 1800000.00,
        orders: 67
      }
    ];

    // –í—Å—Ç–∞–≤–ª—è–µ–º –æ—Ñ–∏—Å—ã
    for (const office of offices) {
      await db.query(`
        INSERT INTO offices (name, address, contact_phone, website, revenue, orders, created_at, updated_at)
        VALUES (?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))
      `, [office.name, office.address, office.contact_phone, office.website, office.revenue, office.orders]);
    }
    console.log('–¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ñ–∏—Å—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');

    // –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ—Ñ–∏—Å–æ–≤
    const [officeRows] = await db.query('SELECT id, name FROM offices ORDER BY id DESC LIMIT 3');
    const officeIds = officeRows.map(row => row.id);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const testUsers = [
      {
        username: 'admin',
        email: 'admin@lawtech.ru',
        password: await bcrypt.hash('admin123', 10),
        role: 'admin',
        office_id: null
      },
      {
        username: 'director_pravoved',
        email: 'director@pravoved.ru',
        password: await bcrypt.hash('director123', 10),
        role: 'office',
        office_id: officeIds[2] // –ü—Ä–∞–≤–æ–≤–µ–¥
      },
      {
        username: 'lawyer_pravoved',
        email: 'lawyer1@pravoved.ru',
        password: await bcrypt.hash('lawyer123', 10),
        role: 'lawyer',
        office_id: officeIds[2] // –ü—Ä–∞–≤–æ–≤–µ–¥
      },
      {
        username: 'director_zashchita',
        email: 'director@zashchita.spb.ru',
        password: await bcrypt.hash('director123', 10),
        role: 'office',
        office_id: officeIds[1] // –ó–∞—â–∏—Ç–∞
      },
      {
        username: 'lawyer_zashchita',
        email: 'lawyer1@zashchita.spb.ru',
        password: await bcrypt.hash('lawyer123', 10),
        role: 'lawyer',
        office_id: officeIds[1] // –ó–∞—â–∏—Ç–∞
      },
      {
        username: 'director_lex',
        email: 'director@lex-consult.ru',
        password: await bcrypt.hash('director123', 10),
        role: 'office',
        office_id: officeIds[0] // –õ–µ–∫—Å
      },
      {
        username: 'lawyer_lex',
        email: 'lawyer1@lex-consult.ru',
        password: await bcrypt.hash('lawyer123', 10),
        role: 'lawyer',
        office_id: officeIds[0] // –õ–µ–∫—Å
      },
      {
        username: 'freelance_lawyer',
        email: 'freelance@lawyer.ru',
        password: await bcrypt.hash('freelance123', 10),
        role: 'lawyer',
        office_id: null
      }
    ];

    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for (const user of testUsers) {
      await db.query(`
        INSERT INTO users (username, email, password, office_id, role, created_at, updated_at)
        VALUES (?, ?, ?, ?, ?, datetime('now'), datetime('now'))
      `, [user.username, user.email, user.password, user.office_id, user.role]);
    }
    console.log('–¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');

    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞—Ö
    console.log('\n=== –ì–û–¢–û–í–´–ï –¢–ï–°–¢–û–í–´–ï –ê–ö–ö–ê–£–ù–¢–´ ===');
    console.log('\nüîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:');
    console.log('Email: admin@lawtech.ru');
    console.log('–ü–∞—Ä–æ–ª—å: admin123');
    
    console.log('\nüè¢ –î–∏—Ä–µ–∫—Ç–æ—Ä–∞ –æ—Ñ–∏—Å–æ–≤:');
    console.log('Email: director@pravoved.ru | –ü–∞—Ä–æ–ª—å: director123 (–ü—Ä–∞–≤–æ–≤–µ–¥)');
    console.log('Email: director@zashchita.spb.ru | –ü–∞—Ä–æ–ª—å: director123 (–ó–∞—â–∏—Ç–∞)');
    console.log('Email: director@lex-consult.ru | –ü–∞—Ä–æ–ª—å: director123 (–õ–µ–∫—Å)');
    
    console.log('\n‚öñÔ∏è –Æ—Ä–∏—Å—Ç—ã:');
    console.log('Email: lawyer1@pravoved.ru | –ü–∞—Ä–æ–ª—å: lawyer123 (–ü—Ä–∞–≤–æ–≤–µ–¥)');
    console.log('Email: lawyer1@zashchita.spb.ru | –ü–∞—Ä–æ–ª—å: lawyer123 (–ó–∞—â–∏—Ç–∞)');
    console.log('Email: lawyer1@lex-consult.ru | –ü–∞—Ä–æ–ª—å: lawyer123 (–õ–µ–∫—Å)');
    console.log('Email: freelance@lawyer.ru | –ü–∞—Ä–æ–ª—å: freelance123 (–§—Ä–∏–ª–∞–Ω—Å–µ—Ä)');
    
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    process.exit(0);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤:', error);
    process.exit(1);
  }
};

seedUsers();